- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  when: ansible_os_family == "Debian"

- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes
  when: ansible_os_family == "Debian"

- name: Install HA and keepalived
  apt: name={{ item }} state=latest update_cache=yes
  loop: ['keepalived', 'haproxy']
  when: ansible_os_family == "Debian"

- name: Update apt-get repo and cache
  yum:
    name: "*"
    state: latest
  delay: 5
  retries: 5
  when: ansible_os_family == "RedHat" and ansible_distribution == "CentOS"

- name: Install HA and keepalived
  yum: name={{ item }}
  loop: ['keepalived', 'haproxy']
  when: ansible_os_family == "RedHat" and ansible_distribution == "CentOS"

- name: Update apt-get repo and cache
  dnf:
    name: "*"
    state: latest
  delay: 5
  retries: 5
  when: ansible_os_family == "RedHat" and ansible_distribution == "Fedora"

- name: Install HA and keepalived
  dnf: name={{ item }}
  loop: ['keepalived', 'haproxy']
  when: ansible_os_family == "RedHat" and ansible_distribution == "Fedora"

- name: Update /etc/hosts
  lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: "{{ lookup('file', 'hosts') }}"

- name: Disabling Selinux
  when: ansible_os_family == "RedHat"
  block:
    - name: Disabling selinux
      shell:
        cmd: setenforce 0
      ignore_errors: true

    - name: Modifying selinux config
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX=enforcing$'
        line: 'SELINUX=permissive'

- name: Configure HAPRoxy
  template:
    src: "../templates/haproxy.cfg.j2"
    dest: "/etc/haproxy/haproxy.cfg"

- name: HAProxy service start
  service:
    name: haproxy
    state: restarted

- name: Configure Keepalived
  template:
    src: "../templates/keepalived.conf.j2"
    dest: "/etc/keepalived/keepalived.conf"

- name: Keepalived service start
  service:
    name: keepalived
    state: restarted
